#ifndef BQ275X_H_
#define BQ275X_H_

#include "main.h"


#define BQ275X_ADDRES 0XAA //(0X55<<1)

typedef enum COMMAND
{
	BQ275X_CNTL=0X00,
	BQ275X_TEMP=0x02,
	BQ275X_VOLTAGE=0x04,
	BQ275X_FLAGS=0x06,
	BQ275X_NOMINALCAPACITY=0x08,
	BQ275X_FULLCAPACITY=0x0A,
	BQ275X_REMAININGCAPACITY=0X0C,
	BQ275X_FULLCHARGECAPACITY=0X0E,
	BQ275X_AVERAGECURRENT=0X10,
	BQ275X_STANDBYCURRENT=0X12,
	BQ275X_MAXLOADCURRENT=0X14,
	BQ275X_AVERAGEPOWER=0X18,
	BQ275X_STATEOFCHARGE=0X1C,
	BQ275X_INTERNALTEMPERATURE=0X1E,
	BQ275X_STATEOFHEALTH=0X20,
	BQ275X_REMAININGCAPACITYUNFIL=0X28,
	BQ275X_REMAININCAPACITYFILTERED=0X2A,
	BQ275X_FULLCHARGECAPACITYUN=0X2C,
	BQ275X_FULLCHARGECAPACITYFIL=0X2E,
	BQ275X_STATEOFCHARGEUNFILTERED=0X30,
	BQ275X_OPCONFIG =0X3A,
	BQ275X_DESIGNCAPACITY=0X3C,
	BQ275X_DATACLASS=0X3E,
	BQ275X_DATABLOCK=0X3F,
	BQ275X_BLOCKDATA=0X40,
	BQ275X_BLOCKDATACHKSM=0X60,
	BQ275X_BLOCKDATACONTROL=0X61

} COMMAND_BQ275X;

typedef enum CNTRL //registers
{
	BQ275X_CNTL_CONTROL_STATUS=0X00,
	BQ275X_CNTL_DEVICE_INFO=0X01,
	BQ275X_CNTL_FW_VERSION=0X02,
	BQ275X_CNTL_DM_CODE=0X04,
	BQ275X_CNTL_PROTECTOR_VERSION=0X04,
	BQ275X_CNTL_PREV_MACWRITE=0X07,
	BQ275X_CNTL_CHEM_ID=0X08,
	BQ275X_CNTL_BAT_INSERT=0X0C,
	BQ275X_CNTL_BAT_REMOVE=0X0D,
	BQ275X_CNTL_SET_HIBERNATE=0X11,
	BQ275X_CNTL_CLEAR_HIBERNATE=0X12,
	BQ275X_CNTL_SET_CFGUPDATE=0X13,
	BQ275X_CNTL_SHUTDOWN_ENABLE=0X1B,
	BQ275X_CNTL_SHUTDOWN=0X1C,
	BQ275X_CNTL_SEALED=0X20,
	BQ275X_CNTL_TOGGLE_GPOUT=0X23,
	BQ275X_CNTL_RESET_STAT=0X41,
	BQ275X_CNTL_SOFT_RESET=0X42,
	BQ275X_CNTL_EXIT_CFGUPDATE=0X43,
	BQ275X_CNTL_EXIT_RESIM=0X44

}CNTRL_BQ275X;

typedef  struct __attribute__((__packed__))
{
	uint8_t ADR1;
	uint8_t ADR2;
	uint8_t COMMAND;
	uint8_t SUBCOMMAND1;
	uint8_t SUBCOMMAND2;
	uint8_t DATA1;
	uint8_t DATA2;
}MESSAGE_TO_BQ275X;

uint8_t BQ275x_init(I2C_HandleTypeDef,uint16_t battery_capacity);
uint16_t BQ275x_status_read(I2C_HandleTypeDef ,CNTRL_BQ275X);
uint16_t BQ275x_data_information(I2C_HandleTypeDef ,COMMAND_BQ275X);

#endif
